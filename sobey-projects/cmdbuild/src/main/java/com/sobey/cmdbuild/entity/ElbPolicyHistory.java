package com.sobey.cmdbuild.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.sobey.cmdbuild.entity.basic.BasicEntity;

/**
 * ElbPolicyHistory generated by hbm2java
 */
@Entity
@Table(name = "elb_policy_history", schema = "public")
public class ElbPolicyHistory extends BasicEntity {

	private Integer elb;
	private ElbPolicy elbPolicy;
	private Integer elbProtocol;
	private Date endDate;
	private String ipaddress;
	private Integer sourcePort;
	private Integer targetPort;

	public ElbPolicyHistory() {
	}

	@Column(name = "elb")
	public Integer getElb() {
		return elb;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "\"CurrentId\"", nullable = false)
	public ElbPolicy getElbPolicy() {
		return elbPolicy;
	}

	@Column(name = "elb_protocol")
	public Integer getElbProtocol() {
		return elbProtocol;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "\"EndDate\"", nullable = false, length = 29)
	public Date getEndDate() {
		return endDate;
	}

	@Column(name = "ipaddress", length = 100)
	public String getIpaddress() {
		return ipaddress;
	}

	@Column(name = "source_port")
	public Integer getSourcePort() {
		return sourcePort;
	}

	@Column(name = "target_port")
	public Integer getTargetPort() {
		return targetPort;
	}

	public void setElb(Integer elb) {
		this.elb = elb;
	}

	public void setElbPolicy(ElbPolicy elbPolicy) {
		this.elbPolicy = elbPolicy;
	}

	public void setElbProtocol(Integer elbProtocol) {
		this.elbProtocol = elbProtocol;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	public void setIpaddress(String ipaddress) {
		this.ipaddress = ipaddress;
	}

	public void setSourcePort(Integer sourcePort) {
		this.sourcePort = sourcePort;
	}

	public void setTargetPort(Integer targetPort) {
		this.targetPort = targetPort;
	}

}
